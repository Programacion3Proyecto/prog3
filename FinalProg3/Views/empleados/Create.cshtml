@model FinalProg3.Models.empleados

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center" style="margin: 3% 0 2% 0;">Crear empleados</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" >
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group center-block">
                @*@Html.LabelFor(model => model.id,"ID", htmlAttributes: new { @class = "control-label col-lg-4" })*@
                <div class="center-block">
                    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control center-block text-center", placeholder = "ID"} })
                    @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group center-block">
            @*@Html.LabelFor(model => model.nombre,"Nombre", htmlAttributes: new { @class = "control-label col-lg-4" })*@
            <div class="center-block">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control center-block text-center", placeholder = "Nombre" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group center-block">
            @*@Html.LabelFor(model => model.apellido,"Apellido", htmlAttributes: new { @class = "control-label col-lg-4" })*@
            <div class="center-block">
                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control center-block text-center", placeholder = "Apellido" } })
                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group center-block">
            @*@Html.LabelFor(model => model.puesto,"Puesto", htmlAttributes: new { @class = "control-label col-lg-4" })*@
            <div class="center-block" style="display:flex; justify-content:center;">
                @*@{
            var listado = new List<SelectListItem>()
                {
                    new SelectListItem()
                    {
                        Text="Secretario",
                        Value="Secretario"
                },
                    new SelectListItem()
                    {
                        Text="Medico",
                        Value="Medico"
                    }
            };
        }
        @Html.DropDownListFor(model => model.puesto,listado, new { htmlAttributes = new { @class = "form-control center-block text-center",@style="padding:100px;" } })*@
                @Html.DropDownListFor(model => model.puesto,
                  new List<SelectListItem> {
                       new SelectListItem { Value = "Medico" , Text = "Medico" },
                       new SelectListItem { Value = "Secretario" , Text = "Secretario" }
                    },
                  new { @class="myselect", @style="width: 300px; padding: 7px; border-radius:5px;"})
                @*Html.EditorFor(model => model.puesto, new { htmlAttributes = new { @class = "form-control center-block text-center", placeholder = "Puesto" } })*@
                @Html.ValidationMessageFor(model => model.puesto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group center-block">
            @*@Html.LabelFor(model => model.usuario,"Usuario", htmlAttributes: new { @class = "control-label col-lg-4" })*@
            <div class="center-block">
                @Html.EditorFor(model => model.usuario, new { htmlAttributes = new { @class = "form-control center-block text-center", placeholder="Usuario", @style = "width:300px; padding: 7px; border - radius:2 %; text - align:center;" } })
                @Html.ValidationMessageFor(model => model.usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group center-block">
            @*@Html.LabelFor(model => model.clave,"Clave", htmlAttributes: new { @class = "control-label text-center" })*@
            <div class=" center-block">
                @Html.Password("Clave", "", new { id = "clave", Textmode = "Password", @class = "form-control center-block text-center", placeholder = "Clave" })
                @Html.ValidationMessageFor(model => model.clave, "", new { @class = "text-danger " })
            </div>
        </div>

        <div class="form-group center-block">
            <div class="center-block">
                <input type="submit" value="Crear" class="btn btn-danger btn-lg btn-block center-block " />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver atras", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
